package presenter;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;

import DAO.FuncionarioSQLiteDAO;
import model.Funcionario;
import view.ViewCriarFuncionario;

public class CriarFuncionarioPresenter {
	private ViewCriarFuncionario view;
    private Funcionario func;
    private String erro;

    public CriarFuncionarioPresenter(final ViewCriarFuncionario viewCriarFuncionario) throws Exception {
        this.view = viewCriarFuncionario;
        this.getAcoesDaView();
    }
    
    public void getAcoesDaView() {
    	viewCriarFuncionario.getBtnFecharCriarFuncionario().addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                viewCriarFuncionario.getFrame().setVisible(false);
            }
        });

        viewCriarFuncionario.getBtnSalvarCriarFuncionario().addActionListener((ActionEvent e) -> {
            if ((viewCriarFuncionario.getTextCargo().getText() == null || viewCriarFuncionario.getTextCargo().getText().trim().equals("")) || (viewCriarFuncionario.getTextNome().getText() == null || viewCriarFuncionario.getTextNome().getText().trim().equals("")) || (viewCriarFuncionario.getTextSalario().getText() == null || viewCriarFuncionario.getTextSalario().getText().trim().equals("")) || (viewCriarFuncionario.getTextIdade().getText() == null || viewCriarFuncionario.getTextIdade().getText().trim().equals("")) || (viewCriarFuncionario.getTextAdmissao().getText() == null || viewCriarFuncionario.getTextAdmissao().getText().trim().equals("")) || (viewCriarFuncionario.getTextDistTrab().getText() == null || viewCriarFuncionario.getTextDistTrab().getText().trim().equals(""))) {
                this.erro = "Existem campos vazios!";
                JOptionPane.showConfirmDialog(null, erro);
            } else {
                try {
                    this.func = new Funcionario(
                    	viewCriarFuncionario.getTextNome().getText(), viewCriarFuncionario.getTextCargo().getText(),
                		Integer.valueOf(viewCriarFuncionario.getTextIdade().getText()), Double.valueOf(viewCriarFuncionario.getTextSalario().getText()),
                		Integer.valueOf(viewCriarFuncionario.getTextDistTrab().getText()), viewCriarFuncionario.getTextAdmissao().getText()
                	);
                    System.out.println( this.func.toString());
                    try {
    					if(this.criarNovoFuncionario()){
    					    JOptionPane.showMessageDialog(null,"Funcionário cadastrado com sucesso!", "Atenção", JOptionPane.INFORMATION_MESSAGE);
    					    
    					} else{
    						JOptionPane.showMessageDialog(null,"Erro ao cadastrar funcionário!", "Erro", JOptionPane.ERROR_MESSAGE);
    					}
    				} catch (Exception e1) {
    					// TODO Auto-generated catch block
    					e1.printStackTrace();
    				}
                    viewCriarFuncionario.getFrame().setVisible(false);
                } catch (NumberFormatException e1) {
                    e1.printStackTrace();
                    this.erro = "Digite valores válidos!";
                    JOptionPane.showConfirmDialog(null, erro);
                }
            }
        });
    }

    public boolean criarNovoFuncionario() throws Exception {

        FuncionarioSQLiteDAO dao = new FuncionarioSQLiteDAO();
        return dao.salvar(this.func);
    }
}
